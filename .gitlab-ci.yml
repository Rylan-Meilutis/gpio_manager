# GitLab CI Pipeline Configuration
stages:
  - build
  - test

build-aarch64:
  stage: build
  image:
    name: registry.gitlab.rylanswebsite.com/rylan-meilutis/rust-docker-builder  # Docker image with maturin preinstalled
    docker:
      platform: linux/arm64
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  variables:
    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc  # Ensure the correct linker is used
    CARGO_BUILD_TARGET: aarch64-unknown-linux-gnu  # Set the target architecture
    PYO3_CROSS: "1"  # Enable PyO3 cross-compilation

  script:
    - apt update && apt install -y jq
    # Install dependencies for cross-compilation
    - apt-get update && apt-get install -y gcc-aarch64-linux-gnu python3 python3-dev python3-pip python3-venv
    # Ensure Python cross-compilation support
    - rustup target add aarch64-unknown-linux-gnu
    - python3 -m venv venv
    - source venv/bin/activate
    - pip3 install uv && uv pip install twine id maturin
    - sleep 500000
    # Build the Python package for aarch64
    - maturin build --release --target aarch64-unknown-linux-gnu
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi target/aarch64-linux-gnu-gcc/wheels/*
    - twine upload -u __token__ -p "${api_token}" target/aarch64-linux-gnu-gcc/wheels/*

  only:
    - pushes
    - main

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml


